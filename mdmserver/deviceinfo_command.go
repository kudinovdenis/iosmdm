package mdmserver

import (
	"time"

	"github.com/google/uuid"
)

type DeviceInformationCommand struct {
	CommandUUID string
	Command     DeviceInformationCommandBody
}

type DeviceInformationCommandBody struct {
	RequestType string // DeviceInformation
	Queries     []string
}

type QueryResponseServiceSubscriptions struct {
	// Service subscription properties
	CarrierSettingsVersion string // Version of the carrier settings.
	CurrentCarrierNetwork  string // Name of the current carrier network
	CurrentMCC             string // Current Mobile Country Code (numeric string)
	CurrentMNC             string // Current Mobile Network Code (numeric string)
	ICCID                  string // The ICCID value.
	IMEI                   string // The device IMEI number.
	IsDataPreferred        bool   // If true, this subscription is preferred for data.
	IsVoicePreferred       bool   // If true, this subscription is preferred for voice.
	Label                  string // The label of this subscription.
	LabelID                string // The UUID identifying this subscription (as a string)
	MEID                   string // The device MEID number.
	PhoneNumber            string // Raw phone number without punctuation, including country code
	Slot                   string // Description of the slot containing the SIM representing this subscription.
}

type AutoSetupAdminAccountInfo struct {
	GUID      string
	ShortName string
}

type OSUpdateSettings struct {
	CatalogURL                      string
	IsDefaultCatalog                bool
	PreviousScanDate                time.Time
	PreviousScanResult              int
	PerformPeriodicCheck            bool
	AutomaticCheckEnabled           bool
	BackgroundDownloadEnabled       bool
	AutomaticAppInstallationEnabled bool
	AutomaticOSInstallationEnabled  bool
	AutomaticSecurityUpdatesEnabled bool
}

type QueryResponses struct {
	// General

	UDID      string   // The unique device identifier (UDID) of the device.
	Languages []string // Array of strings. The first entry in this array indicates the current language. Availability: Available in Apple TV software 6.0 and later. Supported in macOS 10.10 and 10.11 but will be removed in a future macOS release.
	Locales   []string // Array of strings. The first entry in this array indicates the current locale. Availability: Available in Apple TV software 6.0 and later. Supported in macOS 10.10 and 10.11 but will be removed in a future macOS release.
	DeviceID  string   // The Apple TV device ID. Available in iOS 7 (Apple TV software 6.0) and later, on Apple TV only
	// OrganizationInfo // The contents (if any) of a previously set OrganizationInfo setting. Availability: Available in iOS 7 and later. (any dictionary?)
	LastCloudBackupDate    time.Time                   // The date of the last iCloud backup. Availability: Available in iOS 8.0 and later.
	AwaitingConfiguration  bool                        // If true, device is still waiting for a DeviceConfigured message from MDM to continue through Setup Assistant. Availability: Available in iOS 9 and later and the response is only generated by devices enrolled in MDM via DEP (see Device Enrollment Program).
	AutoSetupAdminAccounts []AutoSetupAdminAccountInfo // Returns the local admin users (if any) created automatically by Setup Assistant during DEP enrollment via the AccountConfiguration command. Availability: Available in macOS 10.11 and later and the response is only generated by devices enrolled in MDM via DEP (see Device Enrollment Program). Each dictionary in the array contains two keys: a key GUID with a string value of the Global Unique Identifier of a local admin account, and a key shortName with a string value of the short name of the admin account.

	// iTunes (page 36)

	ITunesStoreAccountIsActive bool   // true if the user is currently logged into an active iTunes Store account. Availability:Available in iOS 7 and later and in macOS 10.9.
	ITunesStoreAccountHash     string // Returns a hash of the iTunes Store account currently logged in. This string is identical to the itsIdHash returned by the VPP App Assignment web service. Availability: Available in iOS 8.0 and later and macOS 10.10 and later.

	// Device info

	DeviceName                    string
	OSVersion                     string
	BuildVersion                  string
	ModelName                     string
	Model                         string
	ProductName                   string
	SerialNumber                  string
	DeviceCapacity                float64
	AvailableDeviceCapacity       float64
	BatteryLevel                  float64
	CellularTechnology            int
	IMEI                          string
	MEID                          string
	ModemFirmwareVersion          string
	IsSupervised                  bool
	IsDeviceLocatorServiceEnabled bool // If true, the device has a device locator service (such as Find My iPhone) enabled. Availability: Available in iOS 7 and later.
	IsActivationLockEnabled       bool
	IsDoNotDisturbInEffect        bool
	// DeviceID string (duplicate)
	EASDeviceIdentifier              string
	IsCloudBackupEnabled             bool
	OSUpdateSettings                 OSUpdateSettings
	LocalHostName                    string
	HostName                         string
	SystemIntegrityProtectionEnabled bool
	ActiveManagedUsers               []string
	IsMDMLostModeEnabled             bool
	MaximumResidentUsers             int

	// Network information

	ICCID                    string   // The ICC identifier for the installed SIM card. skip (duplicate)
	BluetoothMAC             string   // Bluetooth MAC address.
	WiFiMAC                  string   // Wi-Fi MAC address.
	EthernetMACs             []string // Ethernet MAC addresses. Availability: Available in iOS 7 and later.
	EthernetMAC              string   // Primary Ethernet MAC address. Availability: Available in macOS v10.7 and later.
	CurrentCarrierNetwork    string   // Name of the current carrier network. (duplicate)
	SIMCarrierNetwork        string   // Name of the home carrier network. (Replaces SIMCarrierNetwork.)
	SubscriberCarrierNetwork string   // Name of the home carrier network. (Replaces SIMCarrierNetwork.) Availability: Available in iOS 5.0 and later.
	CarrierSettingsVersion   string   // Version of the currently-installed carrier settings file. (duplicate)
	PhoneNumber              string   // Raw phone number without punctuation, including country code. (duplicate)
	VoiceRoamingEnabled      bool     // The current setting of the Voice Roaming setting. This is only available on certain carriers. Availability: iOS 5.0 and later.
	DataRoamingEnabled       bool     // The current setting of the Data Roaming setting.
	IsRoaming                bool     // Returns whether the device is currently roaming. Availability: Available in iOS 4.2 and later. See note below.
	PersonalHotspotEnabled   bool     // True if the Personal Hotspot feature is currently turned on. This value is available only with certain carriers. Availability: iOS 7.0 and later.
	SubscriberMCC            string   // Home Mobile Country Code (numeric string). Availability: Available in iOS 4.2.6 and later.
	SubscriberMNC            string   // Home Mobile Network Code (numeric string). Availability: Available in iOS 4.2.6 and later.
	CurrentMCC               string   // Current Mobile Country Code (numeric string). (duplicate)
	CurrentMNC               string   // Current Mobile Network Code (numeric string). (duplicate)
	ServiceSubscriptions     []QueryResponseServiceSubscriptions
}

type DeviceInformationCommandResponse struct {
	CommandUUID    string
	QueryResponses QueryResponses
}

func (command DeviceInformationCommand) UUID() string {
	return command.CommandUUID
}

func NewDeviceInformationCommand() DeviceInformationCommand {
	queries := []string{
		"UDID",
		"Languages",
		"Locales",
		"DeviceID",
		// OrganizationInfo // The contents (if any) of a previously set OrganizationInfo setting. Availability: Available in iOS 7 and later. (any dictionary?)
		"LastCloudBackupDate",
		"AwaitingConfiguration",
		"AutoSetupAdminAccounts",

		// iTunes (page 36)

		"ITunesStoreAccountIsActive",
		"ITunesStoreAccountHash",

		// Device info

		"DeviceName",
		"OSVersion",
		"BuildVersion",
		"ModelName",
		"Model",
		"ProductName",
		"SerialNumber",
		"DeviceCapacity",
		"AvailableDeviceCapacity",
		"BatteryLevel",
		"CellularTechnology",
		"IMEI",
		"MEID",
		"ModemFirmwareVersion",
		"IsSupervised",
		"IsDeviceLocatorServiceEnabled",
		"IsActivationLockEnabled",
		"IsDoNotDisturbInEffect",
		// DeviceID string (duplicate)
		"EASDeviceIdentifier",
		"IsCloudBackupEnabled",
		"OSUpdateSettings",
		"LocalHostName",
		"HostName",
		"SystemIntegrityProtectionEnabled",
		"ActiveManagedUsers",
		"IsMDMLostModeEnabled",
		"MaximumResidentUsers",

		// Network information
		"ICCID",
		"BluetoothMAC",
		"WiFiMAC",
		"EthernetMACs",
		"EthernetMAC",
		"CurrentCarrierNetwork",
		"SIMCarrierNetwork",
		"SubscriberCarrierNetwork",
		"CarrierSettingsVersion",
		"PhoneNumber",
		"VoiceRoamingEnabled",
		"DataRoamingEnabled",
		"IsRoaming",
		"PersonalHotspotEnabled",
		"SubscriberMCC",
		"SubscriberMNC",
		"CurrentMCC",
		"CurrentMNC",
		"ServiceSubscriptions",
	}
	return DeviceInformationCommand{CommandUUID: uuid.New().String(), Command: DeviceInformationCommandBody{RequestType: "DeviceInformation", Queries: queries}}
}
